# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  name: ci-pools-2
  # vmImage: ubuntu-latest

stages:
  # - stage: loginContainerRegister
  #   displayName: Login Container Register
  #   jobs:
  #     - job:
  #       displayName: Login ACR
  #       steps:
  #       - task: Docker@2
  #         displayName: Login to ACR
  #         inputs:
  #           containerRegistry: ci-vmss-acr
  #           command: 'login'
  
  - stage: check
    displayName: Check Environment
    jobs:
      - job:
        displayName: Check container images
        steps:
          - task: AzureCLI@2
            displayName: Login to ACR
            inputs:
              azureSubscription: ci-vmss-acr
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az acr login --name diver
            
  - stage: check
    displayName: Check Environment
    jobs:
      - job:
        displayName: Check container images
        container:
          image: diver.azurecr.io/internal/docker-kubectl:v1.0
        steps:
          - task: Docker@2
            displayName: Login to ACR
            inputs:
              containerRegistry: ci-vmss-acr
              command: 'login'
          - task: DownloadSecureFile@1
            name: googleArtifactRegistryKey
            inputs:
              secureFile: gke-artifact-registry-rw.json
          - script: |
              cat /etc/os-release
              ls -hl
              curl -s ifconfig.io
              cat $(googleArtifactRegistryKey.secureFilePath)
              # which gcloud
              # which aws
              # which az
            
#  - stage: check2
#    displayName: Check Directory Struct
#    jobs:
#      - job:
#        steps:
#        - script: |
#            echo "Hello, World!"
#          displayName: 'Print Hello World'
#      - job:
#        steps:
#        - script: |
#            ls -hl
#          displayName: 'List Directory'
#
#  - stage: check3
#    displayName: Check agent egress IP
#    jobs:
#      - job:
#        steps:
#        - script: |
#            curl -s ifconfig.io
#          displayName: 'Get Egress IP Address'
#
#  - stage: check4
#    displayName: Check OS info
#    jobs:
#      - job:
#        steps:
#        - script: |
#            cat /etc/os-release
#          displayName: 'Get OS Info'
