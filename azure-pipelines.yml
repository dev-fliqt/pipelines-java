# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  name: ci-pools
  # vmImage: ubuntu-latest

stages:
  # - stage: loginContainerRegister
  #   displayName: Login Container Register
  #   jobs:
  #     - job:
  #       displayName: Login ACR
  #       steps:
  #       - task: Docker@2
  #         displayName: Login to ACR
  #         inputs:
  #           containerRegistry: ci-vmss-acr
  #           command: 'login'
  
  - stage: login Azure
    displayName: Login Azure
    jobs:
      - job:
        displayName: login
        steps:
          - script: |
              curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          - task: AzureCLI@2
            displayName: Login to ACR
            inputs:
              azureSubscription: ci-vmss-azure-subscription
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az acr login --name diver
            
  - stage: loginACR
    displayName: Login ACR
    jobs:
      - job:
        displayName: Check container images
        container:
          image: diver.azurecr.io/internal/docker-kubectl:v1.0
        steps:
          - task: Docker@2
            displayName: Login to ACR
            inputs:
              containerRegistry: ci-vmss-acr
              command: 'login'
              
  - stage: checkCredentials
    displayName: Check Credentials
    jobs:
      - job:
        steps:
          - task: DownloadSecureFile@1
            name: googleArtifactRegistryKey
            inputs:
              secureFile: gke-artifact-registry-rw.json
          - script: |
              cat $(googleArtifactRegistryKey.secureFilePath)
            displayName: 'Check Credentials'
              
  - stage: checkTools
    displayName: Check Tools
    jobs:
      - job:
        steps:
          - script: |
              which gcloud
              which aws
              which az
            displayName: 'Check Tools'
            
  - stage: checkDirectoryStruct
    displayName: Check Directory Struct
    jobs:
      - job:
        steps:
        - script: |
            ls -hl
          displayName: 'List Directory'

  - stage: checkAgentEgressIP
    displayName: Check agent egress IP
    jobs:
      - job:
        steps:
        - script: |
            curl -s ifconfig.io
          displayName: 'Get Egress IP Address'

  - stage: checkOSInfo
    displayName: Check OS info
    jobs:
      - job:
        steps:
        - script: |
            cat /etc/os-release
          displayName: 'Get OS Info'
